generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String          @id @default(uuid())
  name           String
  supabaseUserId String          @unique
  role           String
  isArchived     Boolean         @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  checkListItem  CheckListItem[]
  checkLists     CheckLists[]
  notifications  Notification[]
}

model Notification {
  id          Int        @id @default(autoincrement())
  checkListId Int
  type        String
  title       String
  message     String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userId      String
  checkList   CheckLists @relation(fields: [checkListId], references: [id])
  user        User       @relation(fields: [userId], references: [id])
}

model CheckLists {
  id            Int             @id @default(autoincrement())
  name          String
  description   String?
  status        Status          @default(Pending)
  workDate      DateTime
  siteName      String
  isTemplate    Boolean         @default(false)
  archivedAt    DateTime?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  userId        String
  items         CheckListItem[] // CheckListItemとのリレーション
  user          User            @relation(fields: [userId], references: [id])
  notifications Notification[]
}

model CheckListItem {
  id          Int        @id @default(autoincrement())
  checkListId Int
  categoryId  Int
  name        String
  description String?
  unit        String?
  quantity    Int?
  status      Status     @default(Pending)
  completedAt DateTime?
  memo        String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userId      String
  category    Categories @relation(fields: [categoryId], references: [id])
  checkList   CheckLists @relation(fields: [checkListId], references: [id]) // CheckLists に紐づく
  user        User       @relation(fields: [userId], references: [id])
}

model Categories {
  id           Int             @id @default(autoincrement())
  name         String          @unique
  description  String?
  displayOrder Int             @default(0)
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  items        CheckListItem[]
}

enum Status {
  Pending
  Completed
}
